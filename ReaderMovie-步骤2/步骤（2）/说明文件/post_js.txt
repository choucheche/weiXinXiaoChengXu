输入
page
会显示提示，选择page函数生成一个页面实例
如图1

会生成如下代码：
Page({
  data:{

  },
  onLoad:function(options){
    // 生命周期函数--监听页面加载
    console.log("1-onLoad");
  },
  onReady:function(){
    // 生命周期函数--监听页面初次渲染完成
    console.log("3-onReady");
  },
  onShow:function(){
    // 生命周期函数--监听页面显示
    console.log("2-onShow");
  },
  onHide:function(){
    // 生命周期函数--监听页面隐藏
    console.log("onHide");
  },
  onUnload:function(){
    // 生命周期函数--监听页面卸载
    console.log("onUnload");
  },
  onPullDownRefresh: function() {
    // 页面相关事件处理函数--监听用户下拉动作
    console.log("onPullDownRefresh");
  },
  onReachBottom: function() {
    // 页面上拉触底事件的处理函数
    console.log("onReachBottom");
  },
  onShareAppMessage: function() {
    // 用户点击右上角分享
    return {
      title: 'title', // 分享标题
      desc: 'desc', // 分享描述
      path: 'path' // 分享路径
    }
  }
})

输出
1-onLoad
post
2-onShow
post
3-onReady

声明周期函数：
https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/page.html

------------------------------------------------------------------------------

也可往上加自定义对象，比如下面的
Page({
  data:{

  },
  略。。。,
  image_zidingyi:"/images/...",
  date_geshi:function(){

  },
})
如上，添加了自定义image_zidingyi变量，和date_geshi函数

-------------------------------------------------------------------------------
Page({
data:{
    data:"Jan 24 2017"
    // {{data}}这样放入wxml中
},
onLoad:function(options){
    // 生命周期函数--监听页面加载
    console.log("1-onLoad");

    var post_content1={
      date:"Jan 24 2017",
      title:"一定会编号的",
      img:{
        author_img:"/images/me.jpg",
        post_img:"/images/post/list_img1.jpg"
      },
      content:"新年攒机不用愁 手把手教你组装电脑",
      view_num:"112",
      collect_num:"96",
    }
    this.setData(post_content1);
    // 将post_content1对象的值写到data里了
},
})
post.wxml这样获得，比如
<image class="post-author" src="{{img.author_img}}"></image>
<!--
	{{img.author_img}}的数据是从post.js的onLoad事件中this.setData传给data获得的
	绑定在属性里，需要加引号
-->
<text class="post-date">{{data}}</text>
<!--
	{{data}}的数据是从post.js的data中获得的
-->
